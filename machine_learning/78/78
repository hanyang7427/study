十二、混淆矩阵
                     模型分类
                    0     1      2
              0   52    0      0
真实分类 1     0   69     0
              2     0     0   60
                     模型分类
                    0     1      2
              0   45    4      3
真实分类 1    11   56    2
              2     5     6   49
sklearn.metrics.confusion_metrix(真实分类，模型分类)
-> 混淆矩阵
代码：cm.py
十三、性能报告
针对具体的一组测试样本，给出相应的分类效果指标。
sklearn.metrics.classification_report(真实分类，模型分类)
代码：cr.py
十四、利用随机森林分类器评估汽车质量
代码：car.py
十五、验证曲线
不同的学习模型往往带有多个预先设定参数，谓之超参数，而学习模型的应用效果与超参数有关。验证曲线反映的就是不同的超参数这个与学习效果之间的数量关系，可以帮助学习系统的设计者尽可能最优的超参数组合。
sklearn.model_selection.validation_curve(学习模型,
     输入数据, 输出数据, '超参数名', 超参数列表, cv=交叉验证次数)
-> 欲测超参数取列表每个值时各次交叉验证的得分矩阵
        0   1   2
100  
200  
代码：vc.py
十六、学习曲线
选择不同大小的训练集规模，会有不同的学习效果，为了避免出现欠拟合和过拟合两中极端现象，可以通过学习曲线，评估样本量和学习效果之间数据关系，选择尽可能优化的训练集规模。
sklearn.model_selection.learning_curve(模型，输入数据,
    输出数据, train_sizes=训练集大小列表， cv=交叉验证次数)
        0   1   2
100  
200  
代码：lc.py
10 2
20 1
十七、评估收入阶层
如果输入和输出数据中包含非数字形式的对象，通常需要按照某种特定的编码方案将其转换为数字，以方便回归器或者分类器计算处理。如果某种特性的字面意义与数值大小有关，编码时应该保持其原始字面意义不变，以避免因丢失原意而导致训练失败。
代码：income.py
十八、SVM线性分类器
SVM线性分离器总是通过直线分类样本。对于非线性布局的样本无能为力。
代码：svm_linear.py
十九、SVM非线性分类器
SVM通过核函数升维将一组N维线性不可分的样本，变为N+1维的线性可分样本。可以选择多项式函数作为升维核函数，可以部分解决线性不可分问题，但最终结果未必理想。
代码：svm_poly.py
二十、SVM径向基分类器
为SVM分类器指定选择径向基函数(RBF)，可以改善对非线性样本的
分类效果。
代码：svm_rbf.py
二十一、类型失衡
通过为分类器对象指定分类权重均衡参数class_weitht为balance，以在某正程度上，抵消类型失衡的影响。
代码：svm_balance.py
二十二、置信度评估
probability=True
模型对象.predict_proba(输入数据)->与每条输入样本对应的置信度。
代码：svm_cp.py
