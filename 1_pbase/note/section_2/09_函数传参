函数 function：
    什么是函数：
      函数是可以重复执行的代码块，可以重复使用
    作用：
      定义用户级别的函数
    语法：
      def 函数名(参数列表):
          语句块
          ...
      说明：
        函数名是语句块的名称。函数名的命名规则与变量名相同。函数名是一个变量，是绑定代码块的名称。
        函数有自己的命名空间，要让函数处理外部数据需要用参数传给函数，传入一些数据。如果不需要传入
        参数，参数列表可以为空。定义函数时，语句块不能为空，如果空需要填充pass语句
    函数调用：
      函数名(实际参数)
      调用说明：
        注意：函数调用是一个表达式，表达式可以插到别的表达式中
        如果没有return语句，函数执行完毕返回None值对象，有return语句返回return的对象
        函数需要返回其值对象需要用return语句
    return 语句：
      语法：
        return [表达式]
      作用：
        结束当前函数的执行，返回到调用该函数的地方，同时返回一个值对象的引用关系
      说明：
        return语句后跟的表达式可以省略，省略后相当于return None
        如果函数内没有return语句，则函数执行完最后一条语句后返回None(相当最后加return None)
        函数的调用可以返回任意类型
    函数的参数传递：
      传递方式：
        位置传参，*序列传参，**关键字传参
        1、位置传参：
          实际参数按顺序依次传给形式参数
          1,2,3 --> a,b,c       a = 1, b = 2, c = 3
          说明：
            实参和形参能通过位置进行传递，实参和形参的个数必须相同
        2、序列穿参：
          序列的元素按顺序传递给形式参数
          [1,2,3] --> a,b,c     a = 1, b = 2, c = 3
          说明：
            序列(str,tuple,list)的元素个数必须与列表个数相同
          例：
            # def f(a,b,c):
            s1 = [1,2,3]
            f(*s1)
        3、关键字传参：
          关键字传参是指传参时，按着形参的名称给形参赋值，实参和形参按名称进行匹配
          例：
            # def f(a,b,c):
            # a,b,c为形参名称
            f(a=1, b=2, c=3)
        4、字典关键字传参：
          实参和形参通过字典进行传递和匹配，字典的值传递给键对应的形参
          例：
            # def f(a,b,c):
            d = {"a":1,"b":2,"c":3}
            f(**d)
          说明：
            **后必须跟字典，key的个数与形参个数相同，key必须为字符串，key名必须为形参变量名
        5、组合传参：
          例：
            # def f(a,b,c,d,e,f):
            f(1,b=2,**{"c":3,"e":5},d=4)
            # 错误，位置参数不能再关键字参数后
            f(1,2,3,e=4,5)

花式定义函数
    指定缺省参数：
      语法：
        def 函数名(形参1=默认参数1,形参2=默认参数2,...)
            语句
            ...
      例：
        def info(name, age=1, addr="unkonwn"):
            print("姓名：",name,"年龄：",age,"住址：",addr)
        # 调用
        info(name='tarena',age=15,addr="朝阳区")
        info(tarena)
    注意：
      缺省参数必须从右到左依次存在，如果一个参数有缺省值，则其右侧的所有参数都必须有缺省值
      缺省参数可以有0个或多个，甚至全部都有缺省参数
      例：
        # 错误，前边的有缺省值后边的必须有缺省值
        def f(a=1,b,c):
    函数的不定长参数：
      星号元组形参，双星号字典形参
      1、星号可迭代对象形参：
        语法：
          def 函数名(*args):           # *args 代表所有(*)的参数(args)
              语句块
        例：
          def f(*args):
              print(args)
          f("1", 200, "Three", 4.4)
        说明：参数为元组，列表，字符串，集合，字典
      2、双星号字典形参：
        语法：
          def 函数名(**kwargs):
              语句块
        例：
          def f(**kwargs):
              print("参数个数：",len(kwargs))
              for k,v in kwargs.items():
                  print(k, "->>", v)
          f(name='tarena', age=15)
          f(a=1,b='bbb',c=[1,2,3],d=True)

    命名关键字形参(named)：
      语法：
        def 函数名(*,命名关键字形参名)
            语句块
        或
        def 函数名(*args,命名关键字形参名)
            语句块
      例：
        def f(a, b, *, c):
        f(1, 2, c=3)     # 对
        f(1, 2, 3)       # 错
        def f(a, *args, b, c):
        f(1,2,3,4)       # 错
        f(1,2,b=3,c=4)   # 对
        f(11,c=44,b=33)  # 对
    函数的参数列表顺序：
        位置形参 > 星号元组形参(*args) > 命名关键字形参 > 双星号字典形参(**kwargs)
        注意：双星号字典形参(**kwargs)后不能再加任何形参
      例：
        def f(a,b,*args,c,**kwargs):
            print(a,b,args,c,kwargs)
        f(100,200,300,400,c="C",d="D",e="E")
        a       --> 100
        b       --> 200
        args    --> (300,400)
        c       --> "C"
        kwargs  --> {'d': 'D', 'e': 'E'}

练习：
    1、写一个函数minmax有不定长个参数，返回这些参数的最大值和最小值(形成元组，最小在前，最大在后)
    调用此函数，达到最大值和最小值并打印出来
    2、
    判断是不是素数的函数        isprime(x)
    判断一个范围内哪些是        isprime_m2n()
    判断从0到n的哪些是         prime()
