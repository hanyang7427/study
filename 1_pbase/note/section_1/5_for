集成开发环境：spyder3

for循环语句：
    for语句可以用来遍历序列或可迭代对象的每一个元素
    可迭代对象：
      字符串      str
      列表        list
      元组        tuple
      字典        dict
      集合        set
      固定集合    frozenset
      迭代器
    for语句语法：
      for 变量列表 in 可迭代对象:
          语句1
          ...
      else:
          语句2
          ...
      说明：else子句部分可以省略，语句1的执行次数与可迭代对象的元素个数有关
    
    for语句嵌套：
      例子：
        for x in "abc":
            for y in "123":
                print(x+y)
练习：
    任意输入一个字符串，计算要输入的字符'a'的个数，并打印出来
    例如：
      请输入：aabbcca
      打印3


range()函数：
    语法：
      见help(range)
    作用：
      从零开始，每次生成一个整数，后加1操作，知道stop为止(不包含stop)
    例子：
      for x in range(10):
          print(x)
      
练习：
    用for语句算出100~1000之间的水仙花数(Narcissistic number)
    水仙花数指百位的立方+ 十位的立方+各位的立方等于原数的数
    153 370 ...

break语句：
    作用：
      用于循环语句while和for中，用来终止当前循环语句的执行
    例子：
      i = 0
      while i < 100:
          print(i)
          if i >= 3:
              break
          i += 1
      else:
          print("while循环结束")
    说明：
      break语句通常和if语句组合使用，当break语句执行后，此循环语句break之后的语句将不再执行
      break语句终止循环时，循环语句的else子句将不会执行
      break语句只能终止当前循环语句的执行，如有循环嵌套时，不会终止外层循环
    例子：
      for i in range(2):
          for j in range(10)
              print("i,j")
              if j >=3
              break
      else:
          print("程序退出")
      输出：
        01 02 03 11 12 13
continue语句：
    作用：
      用于循环语句while和for中，不再执行本次循环(指向上找到的第一个循环语句)内continue之后的语句，
      重新开始一次新的循环
    示例：
      # 打印10以内的偶数
      for x in range(10):
          if x % 2 == 1:
              continue
          print(x)
      else:
          print("打印结束")
    说明：
      再while执行continue语句，将会直接跳转到while语句真值表达式处重新判断循环条件
      在for语句中执行continue语句，将会从可迭代对象中移向下一个元素再次进行循环
死循环：
    死循环是指循环条件一直成立的循环，死循环通常break语句来终止死循环，死循环else子句永远不会执行

练习：
    1、打印1~20之间的整数，打印在一行显示，每个数字之间用一个空格分隔
       1 2 3 4 ... 18 19 20
    2、打印1~20之间的整数，每行打印5个，打印4行
       1 2 3 4 5
       6 7 8 9 10
       ...
    3、输入一个整数(代表树干的高度)，打印指定高度的树
          *           *
         ***         ***
          *         *****
          *           *
                      *
                      *
    4、输入unicode的起始编码和终止编码，打印此范围内所有的字符
       输入起始值：48
       输入终止值：64
       十进制编码       十六进制编码        文字
        48(10000)        0x30(0x2710)       0(✐)
        49(10001)        0x31(0x2711)       1(✑)
        50(10002)        0x32(0x2712)       2(✒)
    5、打印99乘法表：
       1x1=1
       1x2=2 2x2=4
       1x3=3 2x3=6 3x3=9
       ...
       1x9=9 2x9=18 3x9=27
    6、打印前20个斐波那契数(Fibonacci sequence)
       1 1 2 3 5 8 13 21
