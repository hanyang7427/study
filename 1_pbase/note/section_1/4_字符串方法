索引index：
    python中的字符串是不可以改变的字符序列
    语法：
      字符串[整数值]
    说明：
      序列都可以用索引(index)来访问序列中的对象
      序列正向的索引是从0开始的，第二个索引为1，最后一个位len(s)-1
      序列的反向索引是从-1开始的，-2代表倒数第二个，最后一个是-len(s)
切片/分片slice：
    用于字符串当中，从字符串序列中取出相应的元素，重新组成一个新的字符串序列
    语法：
      字符串[\[开始索引b\]:\[结束索引e\]:\[步长s\]]
      注：开始，结束，步长都可以省略，步长默认为1，左闭右开
    反向切片：
      当步长为负数的时候，为反向切片，反向切片会从-1开始，倒着走
      例子：
        s[:]            # "abcde"
        s[-1:-6:-1]     # "edcba"
python3中常用的序列函数：
    len(s)      返回长度
    max(x)      返回序列的最大值得元素
    min(x)      返回序列中最小值得元素
    小写字母 > 大写字母 > 数字
字符编码转换函数：
    ord(s)    返回一个字符的编码值(ascii/unicode值)
    chr(i)      返回i这个值对应的字符
整数转换位字符串函数：
    bin(i)      将整数转换为二进制字符串
    hex(i)      将整数转换为十六进制字符串
    oct(i)      将整数转换为八进制字符串
字符串转换函数：
    str(x)      将对象转换为字符串

常用的字符串方法：
    方法                        说明
    s.isdigit()                 判断字符串是否全为数字
    s.isalpha()                 ..........是否全为字符(英文字符)a~z,A~Z
    s.islower()                 ..........是否全为小写字符
    s.isupper()                 ..........是否全为大写字符
    s.isspace()                 ..........是否为空白字符( "\t\n\".isspace() -> True )
    s.isnumeric()               ..........是否为数字
    s.center(width[,fill])      将原字符串居中，左右默认填充空格
    s.count(sub[,start[,end]])  获取一个字符串中sub的个数
    s.find(sub[,start[,end]])   获取字符串中的sub索引，失败返回-1
    s.strip()                   返回去掉左右空白字符(\n也是空白字符)的字符串
    s.lstrip()                  left strip
    s.rstrip()                  right strip
    s.title()                   生成每个英文单词首字符大写的字符串
    s.upper()                   生成将英文转化为大写的字符串
    s.lower()                   生成将英文转为为小写的字符串
    s.repleace(old,new[,count]) 将元字符串old用new代替，生成一个新的字符串
    注：空白字符是指水平制表符\t，换行符\n，空格' '，等不可见字符
        help(str)可以查到关于字符串的方法
    
    字符串的属性方法：
      语法：
        对象.属性
        对象.方法
      作用：
        调用对象的属性或方法
      例子：
        "123".isnumeric()       # 
        2.isnumeric()           #2是int类型
字符串格式化表达式：
    作用：
      生成一定格式的字符串
    运算符：
      %
    语法格式：
      格式<占位符>字符串 % 参数值1
    例子：
      name = john ; age = 25
      print("姓名：%s，年龄：%d" % (name, age), "end" , ".")
    占位符：
      占位符    类型码             意义
      +--------- s                  字符串
      |--------- r                  字符串，使用repr()转义，而不是str()
      |--------- c                  整数转为单个字符
      |--------- d                  十进制整数
       --------- o                  八进制整数
      % -------- x                  十六进制整数(字符a-f)
       --------- X                  十六进制整数(字符A-F)
      |--------- e                  指数型浮点数(e小写)，如2.9e+10
      |--------- E                  指数型浮点数(E大写)，如2.9E+10
      |--------- f,F                十进制浮点数形式
      |--------- g,G                十进制形式浮点或指数浮点自动转换
      +--------- %                  等同于一个字符%
    基于字典的字符串格式化：
      "%(name)s 今年 %(age)d岁" % {"age":35, "name":"shangsan"}

    占位符和类型码之间的格式语法：
      -           左对齐
      +           右对齐
      0           补零
      width       宽度
      pricision   精度
      
      例子：
        "%10d"  % 123       # '       123'  (宽度：10，填充：' ')
        "%010d" % 123       # '0000000123'  (宽度：10，填充：0)
        "%-10s" % abc       # 'abc       '  (宽度：10，倒着填充：-)
        "%7.2f" % 1.2345678 # '   1.23'     (宽度：7，精度：.2)

循环语句：
    作用：
      根据条件,重复的执行一个或多个语句
    while语句：
      语法：
        while 真值表达式:
            语句1
            ...
        else:
            语句2
            ...
      注：else子句可以省略

      while语句嵌套：
        i = 1 
        while i < 10:
            j = 1 
            while j < 10:
                print("i=", i , "j =", j)
                j += 1
            i += i

练习：
    1、分别打印1-20之间的偶数和奇数
    2、打印1-10的数，打印在一行显示，每个数字用空格隔开
    3、生成如下字符串：
       "ABCD...XYZ"
    4、生成如下字符串：
       "AaBbCcDd...XxYyZz"
