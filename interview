enumerate
交流式面试

当问开放性问题，说你知道的，分成几点说


mongodb和mysql的区别

联合查询，内联外联，左联右联

三大范式

请写出TCP/IP五层模型：__物理层__、__数据链路层__、__网络层__、__传输层__、__应用层__

Python中用__readline()__函数读取文件一行内容，用__readlines()__函数读取文件全部内容

MySQL和MongoDB的区别是什么(请从数据库类型，数据库的构成及优缺点三个方面回答此问题)
mySQL是传统的关系型数据库，由数据库、表、记录三个层次组成，所用语句为传统的SQL语句，但是在海量数据处理时效率会有所下降。
mongodb是文档型数据库，有数据库、集合、文档三个层次构成，数据结构由键值对组成，适用于事件地记录、内容管理或博客平台等。mongodb，不太稳定，且不支持事务操作，占用空间大

请简单描述fork、Process和Pool的各自的特点(从父进程和子进程的执行方面描述)
fork  父进程不会等子进程，父子进程都要做事；
Process  父进程会等子进程，父子进程都要做事；
Pool  父进程等子进程，父进程不做事；

cookie：http本身不保留之前一切的请求或响应的报文，这种特性无法满足某些业务需要，比如用户登录网站后，希望该用户访问其它页面仍然保持登录状态，网站为了掌握谁送出的请求，需要保存用户的状态


ORM概念
对象关系映射模型
1.解决了面向对象与关系数据库数据相互不匹配的问题
2.在需要数据持久化操作的时候，可以使的统一的模型进行操作，不需要单独操作数据库，不再硬编码(为每一种可能数据访问都提供方案)

什么是闭包，举例
必须有一个内嵌函数，内嵌函数必须引用外部函数中的的变量，外部函数返回值必须是内嵌函数


socket通信过程
服务器调用socket(),bind(),listen(),完成初始化后，调用accept()阻塞等待，处于监听端口的状态，客户端调用socket()初始化后，调用connect()
发出syn段并阻塞等待服务器应答，服务器应答一个syn-ack段，客户端收到后，从connect()返回，同时应答一个ack段，服务器收到后从accept返回



1)在cpu计算密集情况下，使用多进程
对于python的每一个进程，python会单独起一个解释器，多进程可以真正实现并行
2)在I/O密集的情况下，使用多线程，突破GIL可以使用c扩展
在I/O密集情况下，线程很多时间是在等待I/O，所以在等待I/O的时候可以让出cpu资源
3)尽量使用进程池
线程切换开销小，进程切换开销大(可以使用集成池解决)
协程只需要判断状态，切换的开销比线程还小

进程+协程 是很好的解决方案


冒泡排序，选择排序，插入排序，快速排序

简述下src和href的区别
href是指向网络资源所在位置，建立和当前元素(锚点)或当前文档(链接)之间的链接，用于超链接
src是指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置，在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和
frame等元素，当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也是如此，类似于将所指向资源
嵌入到当前标签内，这也是为什么将js脚本放在底部而不是头部

类的继承顺序
新式类，使用mro算法(类似广度优先算法)，可以使用__mro__看到集成顺序，尽量出现菱形继承

如何避免僵尸进程
1.通过join  -->父进程需要阻塞
2.父进程创建子进程，子进程再创建子进程后马上退出，这样子孙进程会变为孤儿进程，同时运行两个独立的进程
3.实际上僵尸进程的产生是子进程退出时没有告知父进程，需要父进程处理，如果不处理则产生僵尸，使用下面的语句，将子进程退出时发送给父进程的信号进行忽略
则不会产生僵尸，因为信号处理是异步程序，所以不会阻塞
import signal
# 在父进程一开始加上这句
signal.signal(signal.SIGCHLD,signal.SIG_GIN)
