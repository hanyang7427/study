脱离文档流：不占页面空间(浮动定位,绝对定位,display:none)
1.css中的定位
  元素在页面中的位置
  定位的分类
    a.普通流定位(默认定位方式)
    b.浮动定位(重点)
    c.相对定位
    d.绝对定位
    e.固定定位
  1)普通流定位(文档流定位)
    默认定位方式
    特点：
      1、每个元素在页面中都有自己的位置，占据一定的页面空间
      2、每个元素基本上都是按照从上倒下，或从左到右的方式进行排列
        快级元素：按照从上到下的顺序，每个元素独占一行
        行内元素：按照从左到右的方式排列的，对个元素占用一行，显示不下时换行
      3、每个元素都是从其父元素的左上角开始排列的
      问题：如何将多个块级元素放在一行显示 - 浮动定位来解决
  2)浮动定位
    将元素的定位方式设置为浮动定位的话，那么元素将具备以下几个特点：
      1、浮动定位的元素会被排除在文档之外，脱离文档流，那么元素就不再占据页面空间
      2、未浮动的元素会上前占位
      3、浮动的元素会停靠在父元素的左边或右边(内)，或其他已浮动元素的边缘上
      4、浮动只能在当前行浮动
      5、浮动解决的问题 - 让多个块级元素能够在一行内显示
    语法：
      属性：float
      取值：
        none    默认值，即无任何浮动效果
        left    浮动到父元素的左边，或停靠在左边已有的浮动元素的边缘上
        right   浮动到父元素的右边，或停靠在右边已有的浮动元素的边缘上
    浮动引发的特殊效果
      1、如果父元素显示不下所有已浮动的子元素的话，那么最后一个将换行
      2、所有的元素一旦浮动起来之后，都会变成块级元素
         行内元素浮动起来之后，允许修改尺寸
      3、元素一旦浮动起来之后，在未指定宽度的情况下，宽度将由内容来决定
      4、文字，图片，行内元素是采用环绕方式来排列的，是不能被浮动元素压在底下的
    清除浮动给其后边元素的影响
      元素一旦浮动起来之后，其后面的远元素有可能被压在底下，如果后面的元素不想被压在底下的话，则可以通过清除浮动的方式来解决问题
      属性：clear(清除前面元素浮动给它带来的影响)
      取值：
        none    默认值，即不做任何清除浮动
        left    清除当前元素前面的元素左浮动所带来的影响，即不会被前面元素左浮动所压在底下
        right   清除当前元素前面的元素右浮动所带来的影响，即不会被前面元素右浮动所压在底下
        both    清除前面元素任何一种浮动方式所带来的影响
    浮动元素对父元素高度的影响
      由于浮动元素会脱离文档流，所以不占据页面空间，那么也就不占父元素空间，所以父元素的高度最终是以未浮动的元素的高度为主
      解决：
        a.为父元素增加overflow，设置值为hidden或auto
          弊端：父元素中如果有要溢出显示的东西也一同被隐藏了
        b.在最后一个子元素位置处，增加一个空块级元素，并设置clear=both
  3)其他定位
    属性：
      position   声明元素的定位方式
      取值：
        static      默认定位方式
        relative    相对定位
        absolute    绝对定位
        fixed       固定定位
      注意：
        将position设置为 relative / absolute / fixed 任意一种的话，那么该元素成为"已定位元素"
      偏移属性(共4个)
        配合着已定位元素去实现位置的一定
        属性：
          top/right/bottom/left
          top   以元素上边为基准边移动元素
          right 以元素右边为基准边移动元素
          bottom 以元素下边为基准边移动元素
          left  以元素左边为基准边移动元素
    相对定位：relative
      元素会相对与它原来的位置偏移某个距离
      属性：
        配合着 偏移属性 实现位置的移动
    绝对定位：absolute
      绝对定位的元素会脱离文档流，不占页面空间
      绝对定位的元素会相对于离他最近的，已定位的，祖先元素 去实现位置的初始化
      如果元素没有最近的，已定位的，祖先元素的话，那么则相对与body取实现位置的初始化
      语法：
        position:absolute;
        配合着偏移属性实现位置的改变
  4)堆叠顺数
    指定堆叠在一起的，元素之间的排列顺序
    属性：z-index
    取值：无单位的数字，数字越大越靠前(顶层)(默认是0)
    注意：
      只有已定位的元素才能使用堆叠顺序
      父子元素永远都是子压在父上
      如果堆叠顺序呢相同的话，后来者居上
  5)固定定位
    将元素固定在浏览器窗口的某个位置处，不会随着滚动条而发生位置的改变
    语法：
      positon：fixed
      配合着 偏移属性 实现元素的定位
    注意：
      固定定位元素永远都是相对于body去实现位置的初始化
2.显示
  1)显示方式
    决定了页面的元素以设么样的方式显示在页面上(块级?行内?)
    属性：display
    取值：
      none      让元素不显示，类似与隐藏
        dispaly为none的元素会脱离文档流 - 不占页面空间
      block     块，让你的元素表现的和块级元素一样
        如果将行内元素变为block之后，则允许修改尺寸，并占父元素100%的宽
      inline    让元素表现的和行内元素一样，即将元素变为行内元素
      inline-block  将元素变为行内块元素
        多个行内块元素以及行内元素允许在一行内显示
        行内块元素允许修改尺寸
  2)显示效果
    visibility
      控制元素的可见性
      取值：
        visible     默认值，可见的
        hidden      元素不可见，隐藏
      面试：
        display:none和visibility:hidden的区别?
        display:none    不可见，并脱离文档流
        visibility:hidden   隐藏，但未脱离文档流
    opacity
      控制当前元素的透明度
      取值：0(完全透明) - 1(完全不透明)之间的数字，取值越大不透明度越高
  3)光标
    指定当鼠标悬停在元素上时，鼠标的表现方式
    属性：cursor
    取值：
      default
      pointer    小手
      crosshair  +
      text       I(文本)
      wait       等待
      help       帮助
  4)列表
    列表项的标志
      属性：list-style-type
      取值：
        none    没有标识
        circle
        square
        disc
        lower-roman
        ...
    列表项图像
      属性：list-style-image
      取值：url(图像路径)
    ***简写属性***
      属性：list-style
      取值：type url()
      常用：list-style:none
3.改变元素在页面中的角度，位置，以及形状
  属性：transform
    取值：
      none    默认值，即无任何转换效果
      一组转换函数  如果有多个转换函数(效果)的话，中间用空格隔开
    转换原点：transform-origin
      取值：
        默认的原点在中心位置处(center center)
        两个值，用空格隔开
        (0px 0px)
        (0% 0%)
        (top/right/bottom/left/center top/right/bottom/left/center)
      注：div的top/right/bottom/left/center包括边框
  1)改变元素在页面中的位置
    属性：transform
    取值：
      translate(x)
        x取值为正，元素右移
        x取值为负，元素左移
      translate(x,y)
        x同上
        y取值为正，元素下移
        y取值为负，元素上移
      translateX(x)
        等同于translate(x)
      translateY(y)
        只在y轴上左移动
  2)缩放：改变元素在页面中的大小
    属性：transform
    取值：
      scale(value)  value表示当前元素宽度和高度的缩放比例
        默认值为1，即原始比例大小
        大于1的数字：     放大
        大于0小于1的数字： 缩小
        小于0：          水平垂直翻转180度放大
      scale(x,y)
        x表示横向缩放比例
        y表示纵向缩放比例
      scaleX(x)
      scaleY(y)
  3)旋转：改变元素在页面中的角度
    属性：transform
    取值：rotate(ndeg) degree(度)
      n取值为正，顺时针旋转
      n取值为负，逆时针旋转
    注意：
      转换原点会影响转换效果，需要设置原点
      旋转的时候是连同坐标周一同跟着转，会影响旋转之后的位移操作
        先移后转  vs  先转后移
        transform:rotate(45deg) translateX(200px)
        vs
        transform:translateX(200px) rotate(45deg)
  4)倾斜
    改变元素在页面中的形状
    属性：transform
    取值：
      skewX(xdeg)   让元素向x轴的方向倾斜x度，但实际上是改变y轴的倾斜角度
        x取值为正，y轴逆时针倾斜
        x取值为负，y轴顺时针倾斜
      skewY(ydeg)   让元素向y轴的方向倾斜y度，但实际上是改变x轴的倾斜角度
        y取值为正，x轴顺时针倾斜
        y取值为负，x轴逆时针倾斜
      skew(xdeg)
        等同与skew(xdeg)
      skew(xdeg,ydeg)