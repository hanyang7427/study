HTML 搭建网页结构
CSS  Cascading Style Sheets - 样式表
  构建网页的样式

  样式声明
    1.样式声明由 属性名称 以及 属性值 组成
    2.属性名称和属性值之间用:连接
      属性名:值
      常用的属性和值
      文字大小：
        属性  font-size
        取值  以px为单位的数值(12-16)
      背景颜色：
        属性  background-color
        取值  颜色的英文表示
      文本颜色：
        属性  color
        取值  颜色的英文表示
  CSS的使用方式
    1.内联方式
      将CSS的内容定义在单独的HTML元素中
        <ANY style="样式声明">
      在一个style中允许有多个样式声明，多个样式声明之间用;分隔
        <ANY style="属性1:值1;属性2:值2">
    2.内部样式表
      让定义好的样式能够适应当前页面中的多个元素
      由选择器和样式声明组成
        选择器：规范了页面中哪些元素能够使用声明好的样式(匹配页面元素)
        样式声明：允许有若干个，由属性以及值组成
          <head>
            <style>
              选择器{           # 样式规则
                属性1:值1;      # 样式声明
                样式声明2;
                ...
                }
              样式规则2
              ...
            </style>
          </head>
    3.外部样式表
      将样式声明在独立的.css文件中，在使用的网页上对.css文件进行引用
      使用步骤
        1)创建.css文件，并编写样式规则
        2)在使用的网页上引用.css文件
          <head>
            <link rel="stylesheet" href="css文件的url">     # releationship
          </head>
      样式表的注释
        /* 注释内容 */
        内部和外部样式都适用，在<style>节点中使用
    4.样式表特性
      1)继承性
        大部分的css属性可以由父元素继承给子元素
      2)层叠性
        对同一个元素编写多个样式规则，如果属性不冲突，则都可以应用到元素上
      3)优先级
        对同一个元素编写多个样式规则的话，如果属性有冲突，则按照不同使用方式的优先级来应用样式
        浏览器的缺省设置：低
        内部或外部样式表：中
          就近原则，后定义者优先
        内联方式       ：高
    5.CSS的选择器(重点)
      选择器作用：规范了页面中哪些元素能够使用声明好的样式 即 匹配页面中的元素
      1)元素选择器
        由标记的名称作为选择器，主要匹配页面中指定标记所对应的所有元素
          ex:匹配页面中所有的div
            div{...}
      2)类选择器
        可以由任意元素的class属性进行 引用 和 匹配 的选择器
        定义：
          .类名称{ ... }
          类名：由字母，数字，_，- 组成，不能以数字开头
        引用：类名不要.
          <ANY class="类名:>
        特殊用法：
          允许将类选择器和元素选择器结合到一起使用，从而实现对某种元素中不同样式的细分控制
          定义：
            元素选择器.类选择器{ ... }
            ex:
              .important{ ... }
              div{ /* 定义页面中所有div的与样式 */ }
              div.important{ /* 定义页面中所有class为important的div */ }
      3)id选择器
        只与页面中指定ID值的元素相匹配(每个元素都有一个id属性，id不可重复)
        定义：
          #ID{ ... }
          ex:
          #container{
            /* 只匹配id为container的元素 */
            }
        注：id不能重复
      4)群组选择器
        群组选择器的声明是一个以,隔开的选择器列表
        选择器1,选择器2,选择器3,...{ ... }
        #container,div.important,span{
          /* 匹配到id为container或class为important的div，或所有span元素 */
          }
      5)后代选择器
        依托于元素的后代关系来匹配某元素的后代元素
        选择器1 选择器2{ ... }
        ex:
          div span{
            /* 匹配所有div中所有的span */
            }
          #top span{
            /* 匹配id为top的下所有span */
      6)子带选择器
        依托于元素的子代关系来匹配某元素的子带元素
        选择器1>选择器2{ ... }
        ex:
          #top>.container{
            匹配id为top中，下一级class为container的元素
            }
      7)伪类选择器
        匹配元素不同状态
          连接伪类
            :link    匹配尚未被访问的超链接
            :visited 匹配访问过的超链接(历史记录里有的就是访问过)
          动态伪类
            :hover   鼠标悬停在元素上的状态
              ex:id为d1的元素的悬停时
                #d1:hover{
                  color:red;
                  }
            :active  匹配元素被激活时的状态
            :focus   元素获取焦点时的状态
          其他伪类
            :before	 p:before	在每个<p>元素之前插入内容
            :after	 p:after	在每个<p>元素之后插入内容
       8)伪元素选择器
         同样是添加到选择器后面去选择某个元素的某个部分
           /* 所有含有"href"属性并且值以"http"开始的元素，
           将会在其内容后增加一个箭头（去表明它是外部链接）
           */

           [href^=http]::after {
           content: '⤴';
           }
    6.尺寸与边框
      单位
        %     百分比
        像素   1px的大小和屏幕的分辨率有关系
        rrggbb  红绿蓝分别两位16进制
      1)尺寸属性
        width
        height
        块级元素默认尺寸
          宽度：占其父元素100%的宽
          高度：以内容为准
        行内元素默认尺寸：
          宽度和高度均以内容为准
        允许修改尺寸的元素：所有的块级元素
        除img以外的所有的行内元素都不能修改尺寸
        溢出
          当使用属性限制元素尺寸，如果内容所需空间大于元素尺寸时，将产生溢出的效果
          属性：
            overflow
            overflow-x
            overflow-y
          取值：
            visible 可见的(默认值)
            hidden  溢出的内容隐藏
            scroll  显示滚动条
            auto    溢出时才显示滚动条并可用
        注意：如果希望在div内要溢出时自动换行，使用样式 word-wrap: break-word
      2)边框属性
        四个边
          通过一个属性设置四个方向的边框效果
          属性
            border
          取值
            width     边框的宽度，px为单位
            style     边框的样式，solid(实线)，dotted(点状虚线)，dashed(线状虚线)
            color     边框的颜色
        单个边
          只设置某一条边框的尺寸，样式，颜色
          属性：
            border-top: width style color
            border-right: width style color
            border-bottom: width style color
            border-left: width style color
              ex:顶部边框宽度1像素，实线，黑色
                border-top: 1px solid #000;
        单属性的设置
          设置四个方向边框的某一个属性值
          属性：
            border-width:
            border-style:
            border-color:
              ex:四个边框的宽度5像素
                border-width: 5px
        单边单边单属性
          设着某个方向边框的某个属性值
            border-{top,right,bottom,left}-{width,style,color}
        边框的倒角
          将四个方向的角由直角变为圆角
          属性：
            border-radius
          取值：
            以px为单位的数值
            以%为单位的数值(取值50则为圆形或椭圆)
      3)框模型 Box Model
        所有的元素皆为框
        定义了元素框，处理元素内容的尺寸，边框，内边距以及外边距的一种计算方式
        当框模型的属性介入到元素中的时候，那么元素的整体占地面积会发生改变
          元素的实际宽度 = 左右外边距 + 左右边框 + 左右内边距 + width
          元素的实际高度 = 上下外边距 + 上下边框 + 上下内边距 + height
        1.外边距
          围绕在元素边框之外的一段空白空间
          属性：
            margin      最多控制四个方向的外边距值
            margin-top      上外边距
            margin-right    右外边距
            margin-bottom   下外边距
            margin-left     左外边距
          值：
            1.以px单位的数字
            2.以%为单位的数字：左右外边距是父元素宽度的占比数，上下外边距是父元素高度的占比数
            3.取值为负数：外边距会占领元素的占地
            4.auto：块级元素设置宽度后，在设置其左右外边距都为auto时，元素将在父元素范围中水平居中显示
          margin的简洁写法：
            margin: value
              上下左右
            margin: v1 v2
              上下->左右
                ex:上下是0外边距，左右是居中
                  margin:0 auto   # 值为0可以省略px
            margin: v1 v2 v3;
              上->左右->下
            margin: v1 v2 v3 v4;
              上->右->下->左
          页面中具备默认外边距的元素
            <body>, <h#>, <p>, <ol>, <ul>
            通常情况，会将这些元素的默认外边距都设置为0(css重写)
            <style>
                body,p,h1,h2,h3,h4,h5,h6,ol,ul{
                    margin:0
                    }
            </style>
        2.内边距
          内容与边框之间的距离
          注意：内边距会扩大元素边框所占区域
          属性：
            padding
            padding-top
            padding-right
            padding-bottom
            padding-left
          值：
            以 px 为单位的数值
            以 % 为单位的数值      父元素的占比
          简洁写法：同margin
